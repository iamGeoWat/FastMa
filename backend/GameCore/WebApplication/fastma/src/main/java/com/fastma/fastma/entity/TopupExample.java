package com.fastma.fastma.entity;

import java.util.ArrayList;
import java.util.List;

public class TopupExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table topup
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table topup
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table topup
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table topup
     *
     * @mbggenerated
     */
    public TopupExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table topup
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table topup
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table topup
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table topup
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table topup
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table topup
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table topup
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table topup
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table topup
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table topup
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table topup
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andOrderidIsNull() {
            addCriterion("orderid is null");
            return (Criteria) this;
        }

        public Criteria andOrderidIsNotNull() {
            addCriterion("orderid is not null");
            return (Criteria) this;
        }

        public Criteria andOrderidEqualTo(Integer value) {
            addCriterion("orderid =", value, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidNotEqualTo(Integer value) {
            addCriterion("orderid <>", value, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidGreaterThan(Integer value) {
            addCriterion("orderid >", value, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidGreaterThanOrEqualTo(Integer value) {
            addCriterion("orderid >=", value, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidLessThan(Integer value) {
            addCriterion("orderid <", value, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidLessThanOrEqualTo(Integer value) {
            addCriterion("orderid <=", value, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidIn(List<Integer> values) {
            addCriterion("orderid in", values, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidNotIn(List<Integer> values) {
            addCriterion("orderid not in", values, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidBetween(Integer value1, Integer value2) {
            addCriterion("orderid between", value1, value2, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidNotBetween(Integer value1, Integer value2) {
            addCriterion("orderid not between", value1, value2, "orderid");
            return (Criteria) this;
        }

        public Criteria andCb_idIsNull() {
            addCriterion("cb_id is null");
            return (Criteria) this;
        }

        public Criteria andCb_idIsNotNull() {
            addCriterion("cb_id is not null");
            return (Criteria) this;
        }

        public Criteria andCb_idEqualTo(String value) {
            addCriterion("cb_id =", value, "cb_id");
            return (Criteria) this;
        }

        public Criteria andCb_idNotEqualTo(String value) {
            addCriterion("cb_id <>", value, "cb_id");
            return (Criteria) this;
        }

        public Criteria andCb_idGreaterThan(String value) {
            addCriterion("cb_id >", value, "cb_id");
            return (Criteria) this;
        }

        public Criteria andCb_idGreaterThanOrEqualTo(String value) {
            addCriterion("cb_id >=", value, "cb_id");
            return (Criteria) this;
        }

        public Criteria andCb_idLessThan(String value) {
            addCriterion("cb_id <", value, "cb_id");
            return (Criteria) this;
        }

        public Criteria andCb_idLessThanOrEqualTo(String value) {
            addCriterion("cb_id <=", value, "cb_id");
            return (Criteria) this;
        }

        public Criteria andCb_idLike(String value) {
            addCriterion("cb_id like", value, "cb_id");
            return (Criteria) this;
        }

        public Criteria andCb_idNotLike(String value) {
            addCriterion("cb_id not like", value, "cb_id");
            return (Criteria) this;
        }

        public Criteria andCb_idIn(List<String> values) {
            addCriterion("cb_id in", values, "cb_id");
            return (Criteria) this;
        }

        public Criteria andCb_idNotIn(List<String> values) {
            addCriterion("cb_id not in", values, "cb_id");
            return (Criteria) this;
        }

        public Criteria andCb_idBetween(String value1, String value2) {
            addCriterion("cb_id between", value1, value2, "cb_id");
            return (Criteria) this;
        }

        public Criteria andCb_idNotBetween(String value1, String value2) {
            addCriterion("cb_id not between", value1, value2, "cb_id");
            return (Criteria) this;
        }

        public Criteria andOrder_sizeIsNull() {
            addCriterion("order_size is null");
            return (Criteria) this;
        }

        public Criteria andOrder_sizeIsNotNull() {
            addCriterion("order_size is not null");
            return (Criteria) this;
        }

        public Criteria andOrder_sizeEqualTo(Integer value) {
            addCriterion("order_size =", value, "order_size");
            return (Criteria) this;
        }

        public Criteria andOrder_sizeNotEqualTo(Integer value) {
            addCriterion("order_size <>", value, "order_size");
            return (Criteria) this;
        }

        public Criteria andOrder_sizeGreaterThan(Integer value) {
            addCriterion("order_size >", value, "order_size");
            return (Criteria) this;
        }

        public Criteria andOrder_sizeGreaterThanOrEqualTo(Integer value) {
            addCriterion("order_size >=", value, "order_size");
            return (Criteria) this;
        }

        public Criteria andOrder_sizeLessThan(Integer value) {
            addCriterion("order_size <", value, "order_size");
            return (Criteria) this;
        }

        public Criteria andOrder_sizeLessThanOrEqualTo(Integer value) {
            addCriterion("order_size <=", value, "order_size");
            return (Criteria) this;
        }

        public Criteria andOrder_sizeIn(List<Integer> values) {
            addCriterion("order_size in", values, "order_size");
            return (Criteria) this;
        }

        public Criteria andOrder_sizeNotIn(List<Integer> values) {
            addCriterion("order_size not in", values, "order_size");
            return (Criteria) this;
        }

        public Criteria andOrder_sizeBetween(Integer value1, Integer value2) {
            addCriterion("order_size between", value1, value2, "order_size");
            return (Criteria) this;
        }

        public Criteria andOrder_sizeNotBetween(Integer value1, Integer value2) {
            addCriterion("order_size not between", value1, value2, "order_size");
            return (Criteria) this;
        }

        public Criteria andIf_doneIsNull() {
            addCriterion("if_done is null");
            return (Criteria) this;
        }

        public Criteria andIf_doneIsNotNull() {
            addCriterion("if_done is not null");
            return (Criteria) this;
        }

        public Criteria andIf_doneEqualTo(Integer value) {
            addCriterion("if_done =", value, "if_done");
            return (Criteria) this;
        }

        public Criteria andIf_doneNotEqualTo(Integer value) {
            addCriterion("if_done <>", value, "if_done");
            return (Criteria) this;
        }

        public Criteria andIf_doneGreaterThan(Integer value) {
            addCriterion("if_done >", value, "if_done");
            return (Criteria) this;
        }

        public Criteria andIf_doneGreaterThanOrEqualTo(Integer value) {
            addCriterion("if_done >=", value, "if_done");
            return (Criteria) this;
        }

        public Criteria andIf_doneLessThan(Integer value) {
            addCriterion("if_done <", value, "if_done");
            return (Criteria) this;
        }

        public Criteria andIf_doneLessThanOrEqualTo(Integer value) {
            addCriterion("if_done <=", value, "if_done");
            return (Criteria) this;
        }

        public Criteria andIf_doneIn(List<Integer> values) {
            addCriterion("if_done in", values, "if_done");
            return (Criteria) this;
        }

        public Criteria andIf_doneNotIn(List<Integer> values) {
            addCriterion("if_done not in", values, "if_done");
            return (Criteria) this;
        }

        public Criteria andIf_doneBetween(Integer value1, Integer value2) {
            addCriterion("if_done between", value1, value2, "if_done");
            return (Criteria) this;
        }

        public Criteria andIf_doneNotBetween(Integer value1, Integer value2) {
            addCriterion("if_done not between", value1, value2, "if_done");
            return (Criteria) this;
        }

        public Criteria andUseridIsNull() {
            addCriterion("userid is null");
            return (Criteria) this;
        }

        public Criteria andUseridIsNotNull() {
            addCriterion("userid is not null");
            return (Criteria) this;
        }

        public Criteria andUseridEqualTo(Integer value) {
            addCriterion("userid =", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotEqualTo(Integer value) {
            addCriterion("userid <>", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThan(Integer value) {
            addCriterion("userid >", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThanOrEqualTo(Integer value) {
            addCriterion("userid >=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThan(Integer value) {
            addCriterion("userid <", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThanOrEqualTo(Integer value) {
            addCriterion("userid <=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridIn(List<Integer> values) {
            addCriterion("userid in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotIn(List<Integer> values) {
            addCriterion("userid not in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridBetween(Integer value1, Integer value2) {
            addCriterion("userid between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotBetween(Integer value1, Integer value2) {
            addCriterion("userid not between", value1, value2, "userid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table topup
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table topup
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}