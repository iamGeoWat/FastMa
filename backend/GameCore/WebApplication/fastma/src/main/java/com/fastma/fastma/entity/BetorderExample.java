package com.fastma.fastma.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class BetorderExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table betorder
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table betorder
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table betorder
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table betorder
     *
     * @mbggenerated
     */
    public BetorderExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table betorder
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table betorder
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table betorder
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table betorder
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table betorder
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table betorder
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table betorder
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table betorder
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table betorder
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table betorder
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table betorder
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andBet_orderidIsNull() {
            addCriterion("bet_orderid is null");
            return (Criteria) this;
        }

        public Criteria andBet_orderidIsNotNull() {
            addCriterion("bet_orderid is not null");
            return (Criteria) this;
        }

        public Criteria andBet_orderidEqualTo(Integer value) {
            addCriterion("bet_orderid =", value, "bet_orderid");
            return (Criteria) this;
        }

        public Criteria andBet_orderidNotEqualTo(Integer value) {
            addCriterion("bet_orderid <>", value, "bet_orderid");
            return (Criteria) this;
        }

        public Criteria andBet_orderidGreaterThan(Integer value) {
            addCriterion("bet_orderid >", value, "bet_orderid");
            return (Criteria) this;
        }

        public Criteria andBet_orderidGreaterThanOrEqualTo(Integer value) {
            addCriterion("bet_orderid >=", value, "bet_orderid");
            return (Criteria) this;
        }

        public Criteria andBet_orderidLessThan(Integer value) {
            addCriterion("bet_orderid <", value, "bet_orderid");
            return (Criteria) this;
        }

        public Criteria andBet_orderidLessThanOrEqualTo(Integer value) {
            addCriterion("bet_orderid <=", value, "bet_orderid");
            return (Criteria) this;
        }

        public Criteria andBet_orderidIn(List<Integer> values) {
            addCriterion("bet_orderid in", values, "bet_orderid");
            return (Criteria) this;
        }

        public Criteria andBet_orderidNotIn(List<Integer> values) {
            addCriterion("bet_orderid not in", values, "bet_orderid");
            return (Criteria) this;
        }

        public Criteria andBet_orderidBetween(Integer value1, Integer value2) {
            addCriterion("bet_orderid between", value1, value2, "bet_orderid");
            return (Criteria) this;
        }

        public Criteria andBet_orderidNotBetween(Integer value1, Integer value2) {
            addCriterion("bet_orderid not between", value1, value2, "bet_orderid");
            return (Criteria) this;
        }

        public Criteria andUseridIsNull() {
            addCriterion("userid is null");
            return (Criteria) this;
        }

        public Criteria andUseridIsNotNull() {
            addCriterion("userid is not null");
            return (Criteria) this;
        }

        public Criteria andUseridEqualTo(Integer value) {
            addCriterion("userid =", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotEqualTo(Integer value) {
            addCriterion("userid <>", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThan(Integer value) {
            addCriterion("userid >", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThanOrEqualTo(Integer value) {
            addCriterion("userid >=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThan(Integer value) {
            addCriterion("userid <", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThanOrEqualTo(Integer value) {
            addCriterion("userid <=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridIn(List<Integer> values) {
            addCriterion("userid in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotIn(List<Integer> values) {
            addCriterion("userid not in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridBetween(Integer value1, Integer value2) {
            addCriterion("userid between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotBetween(Integer value1, Integer value2) {
            addCriterion("userid not between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andStake_tokenIsNull() {
            addCriterion("stake_token is null");
            return (Criteria) this;
        }

        public Criteria andStake_tokenIsNotNull() {
            addCriterion("stake_token is not null");
            return (Criteria) this;
        }

        public Criteria andStake_tokenEqualTo(Integer value) {
            addCriterion("stake_token =", value, "stake_token");
            return (Criteria) this;
        }

        public Criteria andStake_tokenNotEqualTo(Integer value) {
            addCriterion("stake_token <>", value, "stake_token");
            return (Criteria) this;
        }

        public Criteria andStake_tokenGreaterThan(Integer value) {
            addCriterion("stake_token >", value, "stake_token");
            return (Criteria) this;
        }

        public Criteria andStake_tokenGreaterThanOrEqualTo(Integer value) {
            addCriterion("stake_token >=", value, "stake_token");
            return (Criteria) this;
        }

        public Criteria andStake_tokenLessThan(Integer value) {
            addCriterion("stake_token <", value, "stake_token");
            return (Criteria) this;
        }

        public Criteria andStake_tokenLessThanOrEqualTo(Integer value) {
            addCriterion("stake_token <=", value, "stake_token");
            return (Criteria) this;
        }

        public Criteria andStake_tokenIn(List<Integer> values) {
            addCriterion("stake_token in", values, "stake_token");
            return (Criteria) this;
        }

        public Criteria andStake_tokenNotIn(List<Integer> values) {
            addCriterion("stake_token not in", values, "stake_token");
            return (Criteria) this;
        }

        public Criteria andStake_tokenBetween(Integer value1, Integer value2) {
            addCriterion("stake_token between", value1, value2, "stake_token");
            return (Criteria) this;
        }

        public Criteria andStake_tokenNotBetween(Integer value1, Integer value2) {
            addCriterion("stake_token not between", value1, value2, "stake_token");
            return (Criteria) this;
        }

        public Criteria andRacetrack_idIsNull() {
            addCriterion("racetrack_id is null");
            return (Criteria) this;
        }

        public Criteria andRacetrack_idIsNotNull() {
            addCriterion("racetrack_id is not null");
            return (Criteria) this;
        }

        public Criteria andRacetrack_idEqualTo(Integer value) {
            addCriterion("racetrack_id =", value, "racetrack_id");
            return (Criteria) this;
        }

        public Criteria andRacetrack_idNotEqualTo(Integer value) {
            addCriterion("racetrack_id <>", value, "racetrack_id");
            return (Criteria) this;
        }

        public Criteria andRacetrack_idGreaterThan(Integer value) {
            addCriterion("racetrack_id >", value, "racetrack_id");
            return (Criteria) this;
        }

        public Criteria andRacetrack_idGreaterThanOrEqualTo(Integer value) {
            addCriterion("racetrack_id >=", value, "racetrack_id");
            return (Criteria) this;
        }

        public Criteria andRacetrack_idLessThan(Integer value) {
            addCriterion("racetrack_id <", value, "racetrack_id");
            return (Criteria) this;
        }

        public Criteria andRacetrack_idLessThanOrEqualTo(Integer value) {
            addCriterion("racetrack_id <=", value, "racetrack_id");
            return (Criteria) this;
        }

        public Criteria andRacetrack_idIn(List<Integer> values) {
            addCriterion("racetrack_id in", values, "racetrack_id");
            return (Criteria) this;
        }

        public Criteria andRacetrack_idNotIn(List<Integer> values) {
            addCriterion("racetrack_id not in", values, "racetrack_id");
            return (Criteria) this;
        }

        public Criteria andRacetrack_idBetween(Integer value1, Integer value2) {
            addCriterion("racetrack_id between", value1, value2, "racetrack_id");
            return (Criteria) this;
        }

        public Criteria andRacetrack_idNotBetween(Integer value1, Integer value2) {
            addCriterion("racetrack_id not between", value1, value2, "racetrack_id");
            return (Criteria) this;
        }

        public Criteria andTimeIsNull() {
            addCriterion("`time` is null");
            return (Criteria) this;
        }

        public Criteria andTimeIsNotNull() {
            addCriterion("`time` is not null");
            return (Criteria) this;
        }

        public Criteria andTimeEqualTo(Date value) {
            addCriterion("`time` =", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeNotEqualTo(Date value) {
            addCriterion("`time` <>", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeGreaterThan(Date value) {
            addCriterion("`time` >", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("`time` >=", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeLessThan(Date value) {
            addCriterion("`time` <", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeLessThanOrEqualTo(Date value) {
            addCriterion("`time` <=", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeIn(List<Date> values) {
            addCriterion("`time` in", values, "time");
            return (Criteria) this;
        }

        public Criteria andTimeNotIn(List<Date> values) {
            addCriterion("`time` not in", values, "time");
            return (Criteria) this;
        }

        public Criteria andTimeBetween(Date value1, Date value2) {
            addCriterion("`time` between", value1, value2, "time");
            return (Criteria) this;
        }

        public Criteria andTimeNotBetween(Date value1, Date value2) {
            addCriterion("`time` not between", value1, value2, "time");
            return (Criteria) this;
        }

        public Criteria andIterationIsNull() {
            addCriterion("iteration is null");
            return (Criteria) this;
        }

        public Criteria andIterationIsNotNull() {
            addCriterion("iteration is not null");
            return (Criteria) this;
        }

        public Criteria andIterationEqualTo(Integer value) {
            addCriterion("iteration =", value, "iteration");
            return (Criteria) this;
        }

        public Criteria andIterationNotEqualTo(Integer value) {
            addCriterion("iteration <>", value, "iteration");
            return (Criteria) this;
        }

        public Criteria andIterationGreaterThan(Integer value) {
            addCriterion("iteration >", value, "iteration");
            return (Criteria) this;
        }

        public Criteria andIterationGreaterThanOrEqualTo(Integer value) {
            addCriterion("iteration >=", value, "iteration");
            return (Criteria) this;
        }

        public Criteria andIterationLessThan(Integer value) {
            addCriterion("iteration <", value, "iteration");
            return (Criteria) this;
        }

        public Criteria andIterationLessThanOrEqualTo(Integer value) {
            addCriterion("iteration <=", value, "iteration");
            return (Criteria) this;
        }

        public Criteria andIterationIn(List<Integer> values) {
            addCriterion("iteration in", values, "iteration");
            return (Criteria) this;
        }

        public Criteria andIterationNotIn(List<Integer> values) {
            addCriterion("iteration not in", values, "iteration");
            return (Criteria) this;
        }

        public Criteria andIterationBetween(Integer value1, Integer value2) {
            addCriterion("iteration between", value1, value2, "iteration");
            return (Criteria) this;
        }

        public Criteria andIterationNotBetween(Integer value1, Integer value2) {
            addCriterion("iteration not between", value1, value2, "iteration");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table betorder
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table betorder
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}