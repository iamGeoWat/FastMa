import { EoswsSocket, SocketMessageListener } from "./socket";
import { GetActionTracesMessageData, GetTableRowsMessageData, StreamOptions } from "../message/outbound";
import { EoswsListeners } from "./listeners";
export declare class EoswsClient {
    socket: EoswsSocket;
    listeners: EoswsListeners;
    constructor(socket: EoswsSocket);
    connect(): Promise<void>;
    disconnect(): Promise<void>;
    getActionTraces(data: GetActionTracesMessageData, options?: StreamOptions): {
        onMessage: (callback: SocketMessageListener) => void;
        reqId: string;
        unlisten: () => void;
    };
    getTableRows(parameters: GetTableRowsMessageData, options?: StreamOptions): {
        onMessage: (callback: SocketMessageListener) => void;
        reqId: string;
        unlisten: () => void;
    };
    getTransactionLifecycle(id: string, options?: StreamOptions): {
        onMessage: (callback: SocketMessageListener) => void;
        reqId: string;
        unlisten: () => void;
    };
    private createListenerWithSend;
    private unlisten;
}
