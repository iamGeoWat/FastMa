"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// **Important** The key must be the same as the API type but in upper snake case for "in" operation to work
var OutboundMessageType;
(function (OutboundMessageType) {
    OutboundMessageType["GET_ACTION_TRACES"] = "get_action_traces";
    OutboundMessageType["GET_TABLE_ROWS"] = "get_table_rows";
    OutboundMessageType["GET_TRANSACTION_LIFECYCLE"] = "get_transaction_lifecycle";
    OutboundMessageType["UNLISTEN"] = "unlisten";
})(OutboundMessageType = exports.OutboundMessageType || (exports.OutboundMessageType = {}));
function getActionTracesMessage(data, streamOptions = {}) {
    return createOutboundMessage(OutboundMessageType.GET_ACTION_TRACES, data, { listen: true }, streamOptions);
}
exports.getActionTracesMessage = getActionTracesMessage;
function getTableRowsMessage(data, streamOptions = {}) {
    return createOutboundMessage(OutboundMessageType.GET_TABLE_ROWS, data, { listen: true }, streamOptions);
}
exports.getTableRowsMessage = getTableRowsMessage;
function getTransactionLifecycleMessage(data, streamOptions = {}) {
    return createOutboundMessage(OutboundMessageType.GET_TRANSACTION_LIFECYCLE, data, { listen: true, fetch: true }, streamOptions);
}
exports.getTransactionLifecycleMessage = getTransactionLifecycleMessage;
function unlistenMessage(data) {
    return {
        type: OutboundMessageType.UNLISTEN,
        data
    };
}
exports.unlistenMessage = unlistenMessage;
function createOutboundMessage(type, data, defaultStreamOptions, streamOptions) {
    return Object.assign({ type }, streamOptions, { req_id: getStreamOption(defaultStreamOptions.req_id, streamOptions.req_id), listen: getStreamOption(defaultStreamOptions.listen, streamOptions.listen), fetch: getStreamOption(defaultStreamOptions.fetch, streamOptions.fetch), start_block: getStreamOption(defaultStreamOptions.start_block, streamOptions.start_block), with_progress: getStreamOption(defaultStreamOptions.with_progress, streamOptions.with_progress), data });
}
function getStreamOption(defaultValue, actualValue) {
    return actualValue === undefined ? defaultValue : actualValue;
}
//# sourceMappingURL=outbound.js.map