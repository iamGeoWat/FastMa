export interface OutboundMessage<T> {
    type: OutboundMessageType;
    req_id?: string;
    listen?: boolean;
    fetch?: boolean;
    start_block?: number;
    with_progress?: number;
    data: T;
}
export declare enum OutboundMessageType {
    GET_ACTION_TRACES = "get_action_traces",
    GET_TABLE_ROWS = "get_table_rows",
    GET_TRANSACTION_LIFECYCLE = "get_transaction_lifecycle",
    UNLISTEN = "unlisten"
}
export interface StreamOptions {
    listen?: boolean;
    req_id?: string;
    start_block?: number;
    fetch?: boolean;
    with_progress?: number;
}
export interface GetActionTracesMessageData {
    account?: string;
    accounts?: string;
    receiver?: string;
    receivers?: string;
    action_name?: string;
    action_names?: string;
    with_dbops?: boolean;
    with_dtrxops?: boolean;
    with_ramops?: boolean;
    with_inline_traces?: boolean;
}
export declare function getActionTracesMessage(data: GetActionTracesMessageData, streamOptions?: StreamOptions): OutboundMessage<GetActionTracesMessageData>;
export interface GetTableRowsMessageData {
    code: string;
    scope: string;
    table: string;
    json?: boolean;
    lower_bound?: string;
    upper_bound?: string;
}
export declare function getTableRowsMessage(data: GetTableRowsMessageData, streamOptions?: StreamOptions): OutboundMessage<GetTableRowsMessageData>;
export interface GetTransactionLifecycleMessageData {
    id: string;
}
export declare function getTransactionLifecycleMessage(data: GetTransactionLifecycleMessageData, streamOptions?: StreamOptions): OutboundMessage<GetTransactionLifecycleMessageData>;
export interface UnlistenMessageData {
    req_id: string;
}
export declare function unlistenMessage(data: UnlistenMessageData): {
    type: OutboundMessageType;
    data: UnlistenMessageData;
};
